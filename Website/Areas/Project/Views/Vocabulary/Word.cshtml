@model Website.Areas.Project.Models.VocabularyData.Word
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Vocabulary Word</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserId)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container-fluid clearfix">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VocabWord, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VocabWord, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VocabWord, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.PartOfSpeech, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PartOfSpeech, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PartOfSpeech, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Etymology, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Etymology, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Etymology, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Connotation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Connotation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Connotation, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
        <div class="col-sm-12 container-fluid clearfix">
            <div class="form-group">
                @Html.LabelFor(model => model.FriendlyDefinition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FriendlyDefinition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FriendlyDefinition, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-12 container-fluid clearfix">
            <div class="form-group">
                @Html.LabelFor(model => model.Sketch, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sketch, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sketch, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-12 container-fluid clearfix">
            <div class="form-group">
                @Html.LabelFor(model => model.Adjective, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adjective, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Adjective, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="clearfix container-fluid">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.NounSingular, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NounSingular, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NounSingular, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.NounPlural, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NounPlural, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NounPlural, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix container-fluid">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseTypeId, "VerbTenseTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("VerbTenseTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VerbTenseTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseI, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseI, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseI, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseYou, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseYou, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseYou, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseHeSheIt, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseHeSheIt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseHeSheIt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseWe, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseWe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseWe, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseYou2, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseYou2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseYou2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.VerbTenseThey, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.VerbTenseThey, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VerbTenseThey, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Synonym, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Synonym, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Synonym, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Antonym, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Antonym, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Antonym, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Sentance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sentance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sentance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Analogy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Analogy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Analogy, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
